
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_afq_api.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_afq_api.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_afq_api.py:


==========================
AFQ API
==========================

An example using the AFQ API

.. GENERATED FROM PYTHON SOURCE LINES 10-19

.. code-block:: default

    import os.path as op

    import matplotlib.pyplot as plt
    import nibabel as nib
    import plotly

    from AFQ import api
    import AFQ.data as afd








.. GENERATED FROM PYTHON SOURCE LINES 20-45

Get some example data
---------------------

Retrieves High angular resolution diffusion imaging (HARDI) dataset from
Stanford's Vista Lab

  see https://purl.stanford.edu/ng782rw8378 for details on dataset.

The data for the first subject and first session are downloaded locally
(by default into the users home directory) under:

  ``.dipy/stanford_hardi/``

Anatomical data (``anat``) and Diffusion-weighted imaging data (``dwi``) are
then extracted, formatted to be BIDS compliant, and placed in the AFQ
data directory (by default in the users home directory) under:

  ``AFQ_data/stanford_hardi/``

This data represents the required preprocessed diffusion data necessary for
intializing the AFQ object (which we will do next)

The clear_previous_afq is used to remove any previous runs of the afq object
stored in the AFQ_data/stanford_hardi/ BIDS directory. Set it to false if
you want to use the results of previous runs.

.. GENERATED FROM PYTHON SOURCE LINES 45-48

.. code-block:: default


    afd.organize_stanford_data(clear_previous_afq=True)








.. GENERATED FROM PYTHON SOURCE LINES 49-97

Initialize an AFQ object:
-------------------------

Creates an AFQ object, that encapsulates tractometry. This object can be
used to manage the entire AFQ pipeline, including:

- Tractography
- Registration
- Segmentation
- Cleaning
- Profiling
- Visualization

In this example we will load the subjects session data from the previous step
using the default AFQ parameters.

.. note::

   The first time intializing the AFQ object will download necessary
   waypoint regions of interest (ROIs) templates into AFQ data directory:

- Human corpus callosum templates: ``AFQ_data/callosum_templates/``

  see https://digital.lib.washington.edu/researchworks/handle/1773/34926

- Tract probability maps: ``AFQ_data/templates/``

  see https://figshare.com/articles/Tract_probability_maps_for_automated_fiber_quantification/6270434

These waypoints ROIs will used to identify the desired white matter tracts.

This will also create an output folder for the corresponding AFQ derivatives
in the AFQ data directory: ``AFQ_data/stanford_hardi/derivatives/afq/``

To initialize this object we will pass in the path location to our BIDS
compliant data.

.. note::

   As noted above, the Stanford HARDI data contains anatomical and
   diffusion weighted imaging (dwi) data. In this example, we are interested
   in the vistasoft dwi. For our dataset the `dmriprep` is optional, but
   we have included it to make the initialization more explicit.

.. note::

   We will also be using plotly to generate an interactive visualization.
   So we will specify plotly_no_gif as the visualization backend.

.. GENERATED FROM PYTHON SOURCE LINES 97-103

.. code-block:: default


    myafq = api.AFQ(bids_path=op.join(afd.afq_home,
                                      'stanford_hardi'),
                    dmriprep='vistasoft',
                    viz_backend='plotly_no_gif')








.. GENERATED FROM PYTHON SOURCE LINES 104-121

Reading in DTI FA (Diffusion Tensor Imaging Fractional Anisotropy)
------------------------------------------------------------------
The AFQ object holds a table with file names to various data derivatives.

For example, the file where the FA computed from DTI is stored can be
retrieved by inspecting the ``dti_fa`` property. The measures are stored
in a series, and since we only have one subject and one session we will
access the first (and only) file name from the example data.

.. note::

   The AFQ API computes quantities lazily. This means that DTI parameters
   are not computed until they are required. This means that the first
   line below is the one that requires time.

We will then use `nibabel` to load the deriviative file and retrieve the
data array.

.. GENERATED FROM PYTHON SOURCE LINES 121-126

.. code-block:: default


    FA_fname = myafq.dti_fa[0]
    FA_img = nib.load(FA_fname)
    FA = FA_img.get_fdata()








.. GENERATED FROM PYTHON SOURCE LINES 127-138

Visualize the result with Matplotlib
-------------------------------------
At this point `FA` is an array, and we can use standard Python tools to
visualize it or perform additional computations with it.

In this case we are going to take an axial slice halfway through the
FA data array and plot using a sequential color map.

.. note::

   The data array is structured as a xyz coordinate system.

.. GENERATED FROM PYTHON SOURCE LINES 138-143

.. code-block:: default


    fig, ax = plt.subplots(1)
    ax.matshow(FA[:, :, FA.shape[-1] // 2], cmap='viridis')
    ax.axis("off")




.. image:: /auto_examples/images/sphx_glr_plot_afq_api_001.png
    :alt: plot afq api
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    (-0.5, 105.5, 80.5, -0.5)



.. GENERATED FROM PYTHON SOURCE LINES 144-167

Visualizing bundles and tract profiles:
---------------------------------------
The pyAFQ API provides several ways to visualize bundles and profiles.

First, we will run a function that exports an html file that contains
an interactive visualization of the bundles that are segmented.

.. note::
   By default we resample a 100 points within a bundle, however to reduce
   processing time we will only resample 50 points.

Once it is done running, it should pop a browser window open and let you
interact with the bundles.

.. note::
   Running the code below triggers the full pipeline of operations
   leading to the computation of the tract profiles. Therefore, it
   takes a little while to run (about 40 minutes, typically).

.. note::
   You can hide or show a bundle by clicking the legend, or select a
   single bundle by double clicking the legend. The interactive
   visualization will also all you to pan, zoom, and rotate.

.. GENERATED FROM PYTHON SOURCE LINES 167-171

.. code-block:: default


    bundle_html = myafq.viz_bundles(export=True, n_points=50)
    plotly.io.show(bundle_html[0])




.. raw:: html
    :file: images/sphx_glr_plot_afq_api_002.html


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Optimizing level 2 [max iter: 10000]
    Optimizing level 1 [max iter: 1000]
    Optimizing level 0 [max iter: 100]
    Optimizing level 2 [max iter: 10000]
    Optimizing level 1 [max iter: 1000]
    Optimizing level 0 [max iter: 100]
    Optimizing level 2 [max iter: 10000]
    Optimizing level 1 [max iter: 1000]
    Optimizing level 0 [max iter: 100]
      0%|          | 0/17280 [00:00<?, ?it/s]      0%|          | 2/17280 [00:00<19:20, 14.89it/s]      0%|          | 4/17280 [00:06<8:31:52,  1.78s/it]      0%|          | 18/17280 [00:06<1:16:06,  3.78it/s]      2%|2         | 400/17280 [00:06<02:14, 125.42it/s]      9%|8         | 1552/17280 [00:06<00:25, 612.98it/s]     12%|#1        | 2064/17280 [00:06<00:17, 871.63it/s]     24%|##3       | 4112/17280 [00:06<00:06, 2175.37it/s]     30%|##9       | 5136/17280 [00:06<00:04, 2708.19it/s]     36%|###5      | 6160/17280 [00:07<00:03, 3251.36it/s]     42%|####1     | 7184/17280 [00:07<00:02, 3778.34it/s]     48%|####7     | 8208/17280 [00:07<00:02, 4454.50it/s]     53%|#####3    | 9232/17280 [00:07<00:01, 5009.14it/s]     59%|#####9    | 10256/17280 [00:07<00:01, 5433.15it/s]     65%|######5   | 11280/17280 [00:07<00:01, 5902.81it/s]     71%|#######1  | 12304/17280 [00:07<00:00, 6143.48it/s]     77%|#######7  | 13328/17280 [00:08<00:00, 6146.21it/s]     83%|########3 | 14352/17280 [00:08<00:00, 6569.57it/s]     89%|########8 | 15376/17280 [00:08<00:00, 6225.68it/s]     95%|#########4| 16400/17280 [00:08<00:00, 6305.28it/s]    100%|##########| 17280/17280 [00:08<00:00, 2000.58it/s]
      0%|          | 0/16174 [00:00<?, ?it/s]      3%|3         | 508/16174 [00:00<00:03, 4889.76it/s]     13%|#2        | 2044/16174 [00:00<00:01, 7099.54it/s]     25%|##5       | 4092/16174 [00:00<00:01, 8434.60it/s]     32%|###1      | 5116/16174 [00:00<00:01, 8493.90it/s]     38%|###7      | 6140/16174 [00:00<00:01, 7747.71it/s]     44%|####4     | 7164/16174 [00:00<00:01, 7678.82it/s]     51%|#####     | 8188/16174 [00:01<00:01, 7631.77it/s]     57%|#####6    | 9212/16174 [00:01<00:00, 7324.26it/s]     63%|######3   | 10236/16174 [00:01<00:00, 7534.06it/s]     70%|######9   | 11260/16174 [00:01<00:00, 7138.78it/s]     76%|#######5  | 12284/16174 [00:01<00:00, 7182.85it/s]     82%|########2 | 13308/16174 [00:01<00:00, 7447.86it/s]     89%|########8 | 14332/16174 [00:01<00:00, 7299.18it/s]     95%|#########4| 15356/16174 [00:02<00:00, 7403.44it/s]    100%|##########| 16174/16174 [00:02<00:00, 7894.74it/s]
      0%|          | 0/5409 [00:00<?, ?it/s]      9%|9         | 508/5409 [00:00<00:01, 3910.65it/s]     28%|##8       | 1532/5409 [00:00<00:00, 5693.23it/s]     39%|###8      | 2091/5409 [00:00<00:00, 5275.46it/s]     57%|#####6    | 3068/5409 [00:00<00:00, 6072.30it/s]     76%|#######5  | 4092/5409 [00:00<00:00, 5473.61it/s]     95%|#########4| 5116/5409 [00:00<00:00, 5431.64it/s]    100%|##########| 5409/5409 [00:00<00:00, 5758.70it/s]
      0%|          | 0/3344 [00:00<?, ?it/s]     15%|#5        | 508/3344 [00:00<00:00, 4494.98it/s]     46%|####5     | 1532/3344 [00:00<00:00, 6818.23it/s]     92%|#########1| 3068/3344 [00:00<00:00, 6877.15it/s]    100%|##########| 3344/3344 [00:00<00:00, 7288.76it/s]
      0%|          | 0/8235 [00:00<?, ?it/s]      6%|6         | 508/8235 [00:00<00:01, 4711.50it/s]     25%|##4       | 2044/8235 [00:00<00:00, 7340.76it/s]     50%|####9     | 4092/8235 [00:00<00:00, 7162.71it/s]     62%|######2   | 5116/8235 [00:00<00:00, 6677.75it/s]     75%|#######4  | 6140/8235 [00:00<00:00, 5741.51it/s]     87%|########6 | 7164/8235 [00:01<00:00, 5786.99it/s]     99%|#########9| 8188/8235 [00:01<00:00, 5423.92it/s]    100%|##########| 8235/8235 [00:01<00:00, 5948.94it/s]
      0%|          | 0/8515 [00:00<?, ?it/s]      6%|5         | 508/8515 [00:00<00:01, 4293.18it/s]     18%|#7        | 1532/8515 [00:00<00:00, 7095.52it/s]     36%|###6      | 3068/8515 [00:00<00:00, 8002.41it/s]     48%|####8     | 4092/8515 [00:00<00:00, 6073.29it/s]     60%|######    | 5116/8515 [00:00<00:00, 5471.39it/s]     72%|#######2  | 6140/8515 [00:01<00:00, 5241.32it/s]     84%|########4 | 7164/8515 [00:01<00:00, 5303.12it/s]     96%|#########6| 8188/8515 [00:01<00:00, 5449.52it/s]    100%|##########| 8515/8515 [00:01<00:00, 5895.95it/s]
      0%|          | 0/16721 [00:00<?, ?it/s]      2%|1         | 252/16721 [00:00<00:07, 2309.19it/s]      5%|4         | 764/16721 [00:00<00:04, 3897.96it/s]      9%|9         | 1532/16721 [00:00<00:03, 4608.64it/s]     12%|#2        | 2044/16721 [00:00<00:04, 3514.50it/s]     15%|#5        | 2556/16721 [00:00<00:04, 3369.59it/s]     18%|#8        | 3068/16721 [00:00<00:04, 3324.55it/s]     21%|##1       | 3580/16721 [00:01<00:04, 3181.69it/s]     24%|##4       | 4092/16721 [00:01<00:04, 3153.08it/s]     28%|##7       | 4604/16721 [00:01<00:03, 3481.97it/s]     31%|###       | 5116/16721 [00:01<00:03, 3403.87it/s]     34%|###3      | 5628/16721 [00:01<00:03, 3401.50it/s]     37%|###6      | 6140/16721 [00:01<00:03, 3453.80it/s]     40%|###9      | 6652/16721 [00:01<00:03, 3276.97it/s]     43%|####2     | 7164/16721 [00:02<00:02, 3373.49it/s]     46%|####5     | 7676/16721 [00:02<00:02, 3033.01it/s]     49%|####8     | 8188/16721 [00:02<00:02, 2951.77it/s]     52%|#####2    | 8700/16721 [00:02<00:03, 2673.06it/s]     55%|#####5    | 9212/16721 [00:02<00:02, 2753.24it/s]     58%|#####8    | 9724/16721 [00:03<00:02, 2732.87it/s]     61%|######1   | 10236/16721 [00:03<00:02, 2637.93it/s]     64%|######4   | 10748/16721 [00:03<00:02, 2851.62it/s]     67%|######7   | 11260/16721 [00:03<00:02, 2406.91it/s]     70%|#######   | 11772/16721 [00:03<00:01, 2611.19it/s]     73%|#######3  | 12284/16721 [00:04<00:02, 2131.68it/s]     77%|#######6  | 12796/16721 [00:04<00:01, 2383.79it/s]     80%|#######9  | 13308/16721 [00:04<00:01, 2462.13it/s]     83%|########2 | 13820/16721 [00:04<00:01, 2674.40it/s]     86%|########5 | 14332/16721 [00:04<00:00, 2475.98it/s]     89%|########8 | 14844/16721 [00:05<00:00, 2475.10it/s]     92%|#########1| 15356/16721 [00:05<00:00, 2610.24it/s]     95%|#########4| 15868/16721 [00:05<00:00, 2582.42it/s]     98%|#########7| 16380/16721 [00:05<00:00, 2623.42it/s]    100%|##########| 16721/16721 [00:05<00:00, 2905.90it/s]
      0%|          | 0/16310 [00:00<?, ?it/s]      2%|2         | 380/16310 [00:00<00:04, 3421.16it/s]      6%|6         | 1020/16310 [00:00<00:03, 4207.04it/s]     13%|#2        | 2044/16310 [00:00<00:03, 4324.15it/s]     16%|#5        | 2556/16310 [00:00<00:03, 4132.63it/s]     19%|#8        | 3068/16310 [00:00<00:03, 3804.38it/s]     22%|##1       | 3580/16310 [00:00<00:03, 3669.03it/s]     25%|##5       | 4092/16310 [00:01<00:03, 3227.86it/s]     28%|##8       | 4604/16310 [00:01<00:04, 2659.88it/s]     31%|###1      | 5116/16310 [00:01<00:03, 2960.36it/s]     35%|###4      | 5628/16310 [00:01<00:03, 2756.92it/s]     38%|###7      | 6140/16310 [00:02<00:04, 2374.66it/s]     41%|####      | 6652/16310 [00:02<00:03, 2701.06it/s]     44%|####3     | 7164/16310 [00:02<00:03, 2648.90it/s]     47%|####7     | 7676/16310 [00:02<00:02, 2990.58it/s]     50%|#####     | 8188/16310 [00:02<00:02, 3032.29it/s]     53%|#####3    | 8700/16310 [00:02<00:02, 3090.92it/s]     56%|#####6    | 9212/16310 [00:02<00:02, 3147.34it/s]     60%|#####9    | 9724/16310 [00:03<00:02, 3159.19it/s]     63%|######2   | 10236/16310 [00:03<00:01, 3228.74it/s]     66%|######5   | 10748/16310 [00:03<00:01, 3283.68it/s]     69%|######9   | 11260/16310 [00:03<00:01, 3232.01it/s]     72%|#######2  | 11772/16310 [00:03<00:01, 3262.07it/s]     75%|#######5  | 12284/16310 [00:03<00:01, 3182.53it/s]     78%|#######8  | 12796/16310 [00:04<00:01, 3218.28it/s]     82%|########1 | 13308/16310 [00:04<00:00, 3230.48it/s]     85%|########4 | 13820/16310 [00:04<00:00, 3176.70it/s]     88%|########7 | 14332/16310 [00:04<00:00, 3461.92it/s]     91%|#########1| 14844/16310 [00:04<00:00, 3544.33it/s]     94%|#########4| 15356/16310 [00:04<00:00, 3708.64it/s]     97%|#########7| 15868/16310 [00:04<00:00, 3791.05it/s]    100%|##########| 16310/16310 [00:04<00:00, 3335.03it/s]
      0%|          | 0/14604 [00:00<?, ?it/s]      2%|1         | 252/14604 [00:00<00:07, 1893.98it/s]      3%|3         | 508/14604 [00:00<00:06, 2104.59it/s]      7%|6         | 1020/14604 [00:00<00:05, 2333.34it/s]      9%|8         | 1276/14604 [00:00<00:06, 2080.44it/s]     10%|#         | 1532/14604 [00:00<00:06, 1948.72it/s]     12%|#2        | 1788/14604 [00:00<00:06, 1948.48it/s]     14%|#3        | 2044/14604 [00:01<00:06, 1964.46it/s]     16%|#5        | 2300/14604 [00:01<00:06, 1915.65it/s]     18%|#7        | 2556/14604 [00:01<00:06, 1945.52it/s]     19%|#9        | 2812/14604 [00:01<00:06, 1932.08it/s]     21%|##1       | 3068/14604 [00:01<00:05, 2005.21it/s]     23%|##2       | 3324/14604 [00:01<00:05, 1974.76it/s]     25%|##4       | 3580/14604 [00:01<00:05, 2046.52it/s]     26%|##6       | 3836/14604 [00:01<00:05, 2038.44it/s]     28%|##8       | 4092/14604 [00:02<00:05, 1965.08it/s]     30%|##9       | 4348/14604 [00:02<00:05, 1964.44it/s]     32%|###1      | 4604/14604 [00:02<00:05, 1907.03it/s]     33%|###3      | 4860/14604 [00:02<00:06, 1601.55it/s]     35%|###5      | 5116/14604 [00:02<00:05, 1742.86it/s]     37%|###6      | 5372/14604 [00:02<00:05, 1771.82it/s]     39%|###8      | 5628/14604 [00:02<00:05, 1682.17it/s]     40%|####      | 5884/14604 [00:03<00:05, 1738.78it/s]     42%|####2     | 6140/14604 [00:03<00:04, 1769.92it/s]     44%|####3     | 6396/14604 [00:03<00:04, 1909.34it/s]     46%|####5     | 6652/14604 [00:03<00:04, 1787.50it/s]     47%|####7     | 6908/14604 [00:03<00:04, 1716.50it/s]     49%|####9     | 7164/14604 [00:03<00:04, 1623.53it/s]     51%|#####     | 7420/14604 [00:04<00:04, 1579.77it/s]     53%|#####2    | 7676/14604 [00:04<00:04, 1556.52it/s]     54%|#####4    | 7932/14604 [00:04<00:04, 1573.21it/s]     56%|#####6    | 8188/14604 [00:04<00:04, 1504.57it/s]     58%|#####7    | 8444/14604 [00:04<00:03, 1672.31it/s]     60%|#####9    | 8700/14604 [00:04<00:03, 1598.44it/s]     61%|######1   | 8956/14604 [00:04<00:03, 1634.22it/s]     63%|######3   | 9212/14604 [00:05<00:03, 1562.50it/s]     65%|######4   | 9468/14604 [00:05<00:02, 1747.89it/s]     67%|######6   | 9724/14604 [00:05<00:02, 1890.00it/s]     68%|######8   | 9980/14604 [00:05<00:02, 1708.63it/s]     70%|#######   | 10236/14604 [00:05<00:02, 1697.45it/s]     74%|#######3  | 10748/14604 [00:05<00:02, 1828.10it/s]     75%|#######5  | 11004/14604 [00:06<00:01, 1855.01it/s]     79%|#######8  | 11516/14604 [00:06<00:01, 1974.83it/s]     81%|########  | 11772/14604 [00:06<00:01, 1974.79it/s]     82%|########2 | 12028/14604 [00:06<00:01, 2001.89it/s]     84%|########4 | 12284/14604 [00:06<00:01, 1930.38it/s]     86%|########5 | 12540/14604 [00:06<00:01, 1928.86it/s]     88%|########7 | 12796/14604 [00:07<00:00, 1935.43it/s]     89%|########9 | 13052/14604 [00:07<00:00, 1965.77it/s]     91%|#########1| 13308/14604 [00:07<00:00, 2034.60it/s]     93%|#########2| 13564/14604 [00:07<00:00, 2043.36it/s]     95%|#########4| 13820/14604 [00:07<00:00, 2079.37it/s]     96%|#########6| 14076/14604 [00:07<00:00, 1982.00it/s]     98%|#########8| 14332/14604 [00:07<00:00, 2073.59it/s]    100%|#########9| 14588/14604 [00:07<00:00, 2080.47it/s]    100%|##########| 14604/14604 [00:07<00:00, 1858.25it/s]
      0%|          | 0/14117 [00:00<?, ?it/s]      2%|1         | 252/14117 [00:00<00:06, 2204.31it/s]      5%|5         | 764/14117 [00:00<00:04, 2896.25it/s]     11%|#         | 1532/14117 [00:00<00:03, 3446.00it/s]     14%|#4        | 2044/14117 [00:00<00:04, 2818.19it/s]     18%|#8        | 2556/14117 [00:00<00:04, 2533.70it/s]     22%|##1       | 3068/14117 [00:01<00:04, 2352.09it/s]     25%|##5       | 3580/14117 [00:01<00:04, 2226.22it/s]     29%|##8       | 4092/14117 [00:01<00:05, 1993.83it/s]     33%|###2      | 4604/14117 [00:02<00:05, 1837.35it/s]     36%|###6      | 5116/14117 [00:02<00:04, 1889.49it/s]     40%|###9      | 5628/14117 [00:02<00:04, 1980.26it/s]     43%|####3     | 6140/14117 [00:02<00:04, 1732.49it/s]     47%|####7     | 6652/14117 [00:03<00:04, 1670.32it/s]     51%|#####     | 7164/14117 [00:03<00:04, 1666.82it/s]     54%|#####4    | 7676/14117 [00:03<00:03, 1653.69it/s]     58%|#####8    | 8188/14117 [00:04<00:03, 1784.49it/s]     62%|######1   | 8700/14117 [00:04<00:03, 1699.10it/s]     65%|######5   | 9212/14117 [00:04<00:02, 1797.30it/s]     69%|######8   | 9724/14117 [00:05<00:02, 1815.52it/s]     73%|#######2  | 10236/14117 [00:05<00:01, 1948.72it/s]     76%|#######6  | 10748/14117 [00:05<00:01, 1933.47it/s]     80%|#######9  | 11260/14117 [00:05<00:01, 1852.96it/s]     83%|########3 | 11772/14117 [00:06<00:01, 1918.84it/s]     87%|########7 | 12284/14117 [00:06<00:01, 1803.68it/s]     91%|######### | 12796/14117 [00:06<00:00, 1821.63it/s]     94%|#########4| 13308/14117 [00:06<00:00, 1890.30it/s]     98%|#########7| 13820/14117 [00:07<00:00, 2051.18it/s]    100%|##########| 14117/14117 [00:07<00:00, 1991.84it/s]
      0%|          | 0/18863 [00:00<?, ?it/s]      2%|2         | 380/18863 [00:00<00:06, 3031.76it/s]      5%|5         | 1020/18863 [00:00<00:05, 3448.80it/s]      8%|8         | 1532/18863 [00:00<00:04, 3902.48it/s]     11%|#         | 2044/18863 [00:00<00:04, 3562.11it/s]     14%|#3        | 2556/18863 [00:00<00:05, 3137.86it/s]     16%|#6        | 3068/18863 [00:00<00:04, 3181.34it/s]     19%|#8        | 3580/18863 [00:01<00:04, 3142.30it/s]     22%|##1       | 4092/18863 [00:01<00:04, 3060.93it/s]     24%|##4       | 4604/18863 [00:01<00:04, 3424.58it/s]     27%|##7       | 5116/18863 [00:01<00:04, 3063.20it/s]     30%|##9       | 5628/18863 [00:01<00:03, 3443.19it/s]     33%|###2      | 6140/18863 [00:01<00:04, 2963.72it/s]     35%|###5      | 6652/18863 [00:02<00:03, 3276.86it/s]     38%|###7      | 7164/18863 [00:02<00:03, 3020.84it/s]     41%|####      | 7676/18863 [00:02<00:03, 3394.12it/s]     43%|####3     | 8188/18863 [00:02<00:03, 3178.15it/s]     46%|####6     | 8700/18863 [00:02<00:02, 3411.49it/s]     49%|####8     | 9212/18863 [00:02<00:03, 3031.94it/s]     52%|#####1    | 9724/18863 [00:03<00:02, 3172.33it/s]     54%|#####4    | 10236/18863 [00:03<00:03, 2871.59it/s]     57%|#####6    | 10748/18863 [00:03<00:02, 3048.71it/s]     60%|#####9    | 11260/18863 [00:03<00:02, 2960.04it/s]     62%|######2   | 11772/18863 [00:03<00:02, 3082.61it/s]     65%|######5   | 12284/18863 [00:03<00:02, 3144.85it/s]     68%|######7   | 12796/18863 [00:04<00:01, 3188.43it/s]     71%|#######   | 13308/18863 [00:04<00:01, 3104.22it/s]     73%|#######3  | 13820/18863 [00:04<00:01, 3081.65it/s]     76%|#######5  | 14332/18863 [00:04<00:01, 3132.49it/s]     79%|#######8  | 14844/18863 [00:04<00:01, 3265.93it/s]     81%|########1 | 15356/18863 [00:04<00:01, 3258.13it/s]     84%|########4 | 15868/18863 [00:04<00:00, 3301.37it/s]     87%|########6 | 16380/18863 [00:05<00:00, 3182.40it/s]     90%|########9 | 16892/18863 [00:05<00:00, 3075.32it/s]     92%|#########2| 17404/18863 [00:05<00:00, 3076.92it/s]     95%|#########4| 17916/18863 [00:05<00:00, 3245.55it/s]     98%|#########7| 18428/18863 [00:05<00:00, 3190.11it/s]    100%|##########| 18863/18863 [00:05<00:00, 3253.34it/s]
      0%|          | 0/19171 [00:00<?, ?it/s]      2%|1         | 380/19171 [00:00<00:05, 3304.97it/s]      5%|5         | 1020/19171 [00:00<00:05, 3499.67it/s]     11%|#         | 2044/19171 [00:00<00:04, 3447.26it/s]     16%|#6        | 3068/19171 [00:00<00:03, 4418.53it/s]     21%|##1       | 4092/19171 [00:01<00:03, 3898.53it/s]     27%|##6       | 5116/19171 [00:01<00:03, 3670.57it/s]     32%|###2      | 6140/19171 [00:01<00:03, 3550.72it/s]     37%|###7      | 7164/19171 [00:01<00:03, 3583.70it/s]     43%|####2     | 8188/19171 [00:02<00:03, 3463.57it/s]     48%|####8     | 9212/19171 [00:02<00:02, 3432.07it/s]     53%|#####3    | 10236/19171 [00:02<00:02, 3391.78it/s]     59%|#####8    | 11260/19171 [00:03<00:02, 3346.43it/s]     64%|######4   | 12284/19171 [00:03<00:02, 3345.85it/s]     69%|######9   | 13308/19171 [00:03<00:01, 3368.30it/s]     75%|#######4  | 14332/19171 [00:04<00:01, 3368.42it/s]     80%|########  | 15356/19171 [00:04<00:01, 3365.02it/s]     85%|########5 | 16380/19171 [00:04<00:00, 3300.69it/s]     91%|######### | 17404/19171 [00:05<00:00, 3201.71it/s]     96%|#########6| 18428/19171 [00:05<00:00, 2609.51it/s]    100%|##########| 19171/19171 [00:05<00:00, 3397.44it/s]
      0%|          | 0/14560 [00:00<?, ?it/s]      3%|2         | 380/14560 [00:00<00:04, 3416.37it/s]      7%|7         | 1020/14560 [00:00<00:03, 3791.33it/s]     14%|#4        | 2044/14560 [00:00<00:03, 4009.48it/s]     18%|#7        | 2556/14560 [00:00<00:03, 3729.51it/s]     21%|##1       | 3068/14560 [00:00<00:03, 3525.82it/s]     25%|##4       | 3580/14560 [00:00<00:03, 3456.35it/s]     28%|##8       | 4092/14560 [00:01<00:03, 3364.00it/s]     32%|###1      | 4604/14560 [00:01<00:02, 3386.55it/s]     35%|###5      | 5116/14560 [00:01<00:02, 3401.40it/s]     39%|###8      | 5628/14560 [00:01<00:02, 3513.68it/s]     42%|####2     | 6140/14560 [00:01<00:02, 3488.48it/s]     46%|####5     | 6652/14560 [00:01<00:02, 3512.58it/s]     49%|####9     | 7164/14560 [00:02<00:02, 3401.04it/s]     53%|#####2    | 7676/14560 [00:02<00:01, 3531.28it/s]     56%|#####6    | 8188/14560 [00:02<00:01, 3302.94it/s]     60%|#####9    | 8700/14560 [00:02<00:01, 3459.35it/s]     63%|######3   | 9212/14560 [00:02<00:01, 3504.20it/s]     67%|######6   | 9724/14560 [00:02<00:01, 3584.12it/s]     70%|#######   | 10236/14560 [00:02<00:01, 3778.75it/s]     74%|#######3  | 10748/14560 [00:03<00:01, 3545.61it/s]     77%|#######7  | 11260/14560 [00:03<00:00, 3774.06it/s]     81%|########  | 11772/14560 [00:03<00:00, 3710.60it/s]     84%|########4 | 12284/14560 [00:03<00:00, 3681.68it/s]     88%|########7 | 12796/14560 [00:03<00:00, 3911.95it/s]     91%|#########1| 13308/14560 [00:03<00:00, 3909.09it/s]     95%|#########4| 13820/14560 [00:03<00:00, 4026.54it/s]     98%|#########8| 14332/14560 [00:03<00:00, 3955.23it/s]    100%|##########| 14560/14560 [00:03<00:00, 3692.28it/s]
      0%|          | 0/16051 [00:00<?, ?it/s]      2%|2         | 380/16051 [00:00<00:04, 3756.55it/s]      6%|6         | 1020/16051 [00:00<00:03, 4854.15it/s]     13%|#2        | 2044/16051 [00:00<00:02, 5476.66it/s]     19%|#9        | 3068/16051 [00:00<00:01, 6619.67it/s]     25%|##5       | 4092/16051 [00:00<00:02, 4876.65it/s]     32%|###1      | 5116/16051 [00:01<00:02, 4785.09it/s]     38%|###8      | 6140/16051 [00:01<00:02, 4568.84it/s]     45%|####4     | 7164/16051 [00:01<00:02, 4205.08it/s]     51%|#####1    | 8188/16051 [00:01<00:01, 4108.55it/s]     57%|#####7    | 9212/16051 [00:02<00:01, 3634.44it/s]     64%|######3   | 10236/16051 [00:02<00:01, 3508.59it/s]     70%|#######   | 11260/16051 [00:02<00:01, 3531.54it/s]     77%|#######6  | 12284/16051 [00:03<00:01, 3665.34it/s]     83%|########2 | 13308/16051 [00:03<00:00, 3676.24it/s]     89%|########9 | 14332/16051 [00:03<00:00, 3699.81it/s]     96%|#########5| 15356/16051 [00:03<00:00, 3596.08it/s]    100%|##########| 16051/16051 [00:03<00:00, 4147.14it/s]
      0%|          | 0/6580 [00:00<?, ?it/s]      8%|7         | 508/6580 [00:00<00:01, 4242.72it/s]     23%|##3       | 1532/6580 [00:00<00:00, 5925.39it/s]     47%|####6     | 3068/6580 [00:00<00:00, 6478.61it/s]     62%|######2   | 4092/6580 [00:00<00:00, 6345.36it/s]     78%|#######7  | 5116/6580 [00:00<00:00, 5588.94it/s]     93%|#########3| 6140/6580 [00:01<00:00, 5115.64it/s]    100%|##########| 6580/6580 [00:01<00:00, 5882.34it/s]
      0%|          | 0/8382 [00:00<?, ?it/s]      6%|6         | 508/8382 [00:00<00:01, 4303.41it/s]     18%|#8        | 1532/8382 [00:00<00:01, 6286.68it/s]     26%|##5       | 2150/8382 [00:00<00:01, 5872.80it/s]     37%|###6      | 3068/8382 [00:00<00:00, 6822.68it/s]     49%|####8     | 4092/8382 [00:00<00:00, 5589.07it/s]     61%|######1   | 5116/8382 [00:00<00:00, 5599.30it/s]     73%|#######3  | 6140/8382 [00:01<00:00, 5239.90it/s]     85%|########5 | 7164/8382 [00:01<00:00, 5487.85it/s]     98%|#########7| 8188/8382 [00:01<00:00, 4994.24it/s]    100%|##########| 8382/8382 [00:01<00:00, 5505.00it/s]
      0%|          | 0/15789 [00:00<?, ?it/s]      2%|2         | 380/15789 [00:00<00:04, 3444.89it/s]      6%|6         | 1020/15789 [00:00<00:03, 4332.45it/s]     13%|#2        | 2044/15789 [00:00<00:03, 4271.86it/s]     16%|#6        | 2556/15789 [00:00<00:03, 3817.21it/s]     19%|#9        | 3068/15789 [00:00<00:03, 3526.38it/s]     23%|##2       | 3580/15789 [00:01<00:03, 3216.49it/s]     26%|##5       | 4092/15789 [00:01<00:03, 3197.12it/s]     29%|##9       | 4604/15789 [00:01<00:03, 3084.56it/s]     32%|###2      | 5116/15789 [00:01<00:03, 2787.89it/s]     36%|###5      | 5628/15789 [00:01<00:04, 2343.27it/s]     39%|###8      | 6140/15789 [00:02<00:04, 2218.86it/s]     42%|####2     | 6652/15789 [00:02<00:03, 2314.50it/s]     45%|####5     | 7164/15789 [00:02<00:03, 2350.06it/s]     49%|####8     | 7676/15789 [00:02<00:03, 2387.87it/s]     52%|#####1    | 8188/15789 [00:02<00:03, 2401.95it/s]     55%|#####5    | 8700/15789 [00:03<00:02, 2439.87it/s]     58%|#####8    | 9212/15789 [00:03<00:02, 2459.55it/s]     62%|######1   | 9724/15789 [00:03<00:02, 2512.16it/s]     65%|######4   | 10236/15789 [00:03<00:02, 2551.44it/s]     68%|######8   | 10748/15789 [00:03<00:01, 2585.81it/s]     71%|#######1  | 11260/15789 [00:04<00:01, 2532.07it/s]     75%|#######4  | 11772/15789 [00:04<00:01, 2427.47it/s]     78%|#######7  | 12284/15789 [00:04<00:01, 2477.27it/s]     81%|########1 | 12796/15789 [00:04<00:01, 2456.52it/s]     84%|########4 | 13308/15789 [00:05<00:01, 2339.91it/s]     88%|########7 | 13820/15789 [00:05<00:00, 2322.12it/s]     91%|######### | 14332/15789 [00:05<00:00, 2672.70it/s]     94%|#########4| 14844/15789 [00:05<00:00, 2928.07it/s]     97%|#########7| 15356/15789 [00:05<00:00, 3118.20it/s]    100%|##########| 15789/15789 [00:05<00:00, 2785.50it/s]
      0%|          | 0/14310 [00:00<?, ?it/s]      3%|2         | 380/14310 [00:00<00:04, 3167.17it/s]      7%|7         | 1020/14310 [00:00<00:03, 3689.28it/s]     11%|#         | 1532/14310 [00:00<00:03, 4182.27it/s]     14%|#4        | 2044/14310 [00:00<00:04, 3001.65it/s]     18%|#7        | 2556/14310 [00:00<00:04, 2827.67it/s]     21%|##1       | 3068/14310 [00:01<00:04, 2665.99it/s]     25%|##5       | 3580/14310 [00:01<00:03, 2790.85it/s]     29%|##8       | 4092/14310 [00:01<00:03, 2948.43it/s]     32%|###2      | 4604/14310 [00:01<00:03, 2982.25it/s]     36%|###5      | 5116/14310 [00:01<00:03, 2830.16it/s]     39%|###9      | 5628/14310 [00:01<00:02, 2912.88it/s]     43%|####2     | 6140/14310 [00:02<00:02, 2961.30it/s]     46%|####6     | 6652/14310 [00:02<00:02, 2935.41it/s]     50%|#####     | 7164/14310 [00:02<00:02, 2946.02it/s]     54%|#####3    | 7676/14310 [00:02<00:02, 2915.62it/s]     57%|#####7    | 8188/14310 [00:02<00:02, 2801.81it/s]     61%|######    | 8700/14310 [00:02<00:01, 2825.38it/s]     64%|######4   | 9212/14310 [00:03<00:01, 2793.97it/s]     68%|######7   | 9724/14310 [00:03<00:01, 2864.72it/s]     72%|#######1  | 10236/14310 [00:03<00:01, 2895.29it/s]     75%|#######5  | 10748/14310 [00:03<00:01, 2905.18it/s]     79%|#######8  | 11260/14310 [00:03<00:01, 2934.15it/s]     82%|########2 | 11772/14310 [00:03<00:00, 3022.15it/s]     86%|########5 | 12284/14310 [00:04<00:00, 3109.48it/s]     89%|########9 | 12796/14310 [00:04<00:00, 3179.54it/s]     93%|#########2| 13308/14310 [00:04<00:00, 3224.80it/s]     97%|#########6| 13820/14310 [00:04<00:00, 3114.19it/s]    100%|##########| 14310/14310 [00:04<00:00, 3086.02it/s]




.. GENERATED FROM PYTHON SOURCE LINES 172-175

We can also visualize the tract profiles in all of the bundles. These
plots show both FA (left) and MD (right) layed out anatomically.


.. GENERATED FROM PYTHON SOURCE LINES 175-179

.. code-block:: default


    myafq.plot_tract_profiles()
    fig_files = myafq.data_frame['tract_profiles_viz'][0]








.. GENERATED FROM PYTHON SOURCE LINES 180-182

.. figure:: {{ fig_files[0] }}



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 24 minutes  21.586 seconds)


.. _sphx_glr_download_auto_examples_plot_afq_api.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_afq_api.py <plot_afq_api.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_afq_api.ipynb <plot_afq_api.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
